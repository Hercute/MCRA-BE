# MCRA-BE ????? ?? ??

# JWT ??
auth:
  jwt:
    issuer: team.MCRA-BE.com  # MCRA-BE?? ???? ??? ??? ?? (?: yourdomain.com)
    secret: c5t6gzuXneIM3d0Eafy2F3MrkK41BUfD  # ?? ?? MCRA-BE? ????? ?? ??
    accessTokenExpirationHour: 12  # ??? ??? ?? ??

# AWS ??
cloud:
  aws:
    region:
      static: ap-northeast-2  # AWS ??, ??? ??
    stack:
      auto: false  # AWS ?? ??? ??
    credentials:
      access-key: ${AWS_ACCESS_KEY}  # AWS ??? ?, ?? ??? ??
      secret-key: ${AWS_SECRET_KEY}  # AWS ??? ?, ?? ??? ??
    s3:
      bucket: MCRA-BE-????  # S3 ?? ??, MCRA-BE? ?? ?? ??
      dir: /MCRA-BE-????-image  # S3 ?? ????, MCRA-BE? ?? ?? ??

# Spring ??
spring:
  data:
    redis:
      host: 127.0.0.1  # Redis ???, ??? ??
      port: 6379  # Redis ??
  servlet:
    multipart:
      max-file-size: 10MB  # ??? ?? ?? ??
      max-request-size: 10MB  # ?? ?? ??
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}  # ??? ????? ID, ?? ??? ??
            redirect-uri: https://api.MCRA-BE.net/oauth2/callback/kakao  # ????? URI, MCRA-BE? ?? ?? ??
            authorization-grant-type: authorization_code  # ?? ?? ??
            client-authentication-method: client_secret_post  # ????? ?? ??
            client-name: kakao  # ????? ??
            scope:
              - profile_nickname  # ?? ??
              - account_email

          google:
            client-id: ${GOOGLE_CLIENT_ID}  # ?? ????? ID, ?? ??? ??
            client-secret: ${GOOGLE_CLIENT_SECRET}  # ?? ????? ???, ?? ??? ??
            redirect-uri: https://api.MCRA-BE.net/oauth2/callback/google  # ????? URI, MCRA-BE? ?? ?? ??
            client-name: google  # ????? ??
            scope:
              - profile
              - email

          naver:
            client-id: ${NAVER_CLIENT_ID}  # ??? ????? ID, ?? ??? ??
            client-secret: ${NAVER_CLIENT_SECRET}  # ??? ????? ???, ?? ??? ??
            redirect-uri: http://localhost:8080/oauth2/callback/naver  # ????? URI, MCRA-BE? ?? ?? ??
            authorization-grant-type: authorization_code  # ?? ?? ??
            client-name: naver  # ????? ??
            scope:
              - nickname
              - email

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize  # ??? ?? URI
            token-uri: https://kauth.kakao.com/oauth/token  # ??? ?? URI
            user-info-uri: https://kapi.kakao.com/v2/user/me  # ??? ??? ?? URI
            user_name_attribute: id  # ??? ?? ??
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize  # ??? ?? URI
            token-uri: https://nid.naver.com/oauth2.0/token  # ??? ?? URI
            user-info-uri: https://openapi.naver.com/v1/nid/me  # ??? ??? ?? URI
            user_name_attribute: response  # ??? ?? ??

# ?? ?? ????
---
spring:
  config:
    activate:
      on-profile: dev  # ?? ?? ????
  datasource:
    driver-class-name: org.postgresql.Driver  # ?????? ????
    url: ${DB_URL}  # ?????? URL, ?? ??? ??
    username: ${DB_USERNAME}  # ?????? ??? ??, ?? ??? ??
    password: ${DB_PASSWORD}  # ?????? ????, ?? ??? ??
  jpa:
    hibernate:
      ddl-auto: update  # Hibernate DDL ???
    properties:
      highlight_sql: true  # SQL ?? ??
      use_sql_comments: true  # SQL ?? ??
      default_batch_fetch_size: 500  # ?? ?? ?? ??
      hibernate:
        format_sql: true  # SQL ???
    open-in-view: false  # Open Session in View ????

# ??? ?? ????
---
spring:
  config:
    activate:
      on-profile: test  # ??? ?? ????
  jpa:
    hibernate:
      ddl-auto: create  # Hibernate DDL ???
    properties:
      highlight_sql: true  # SQL ?? ??
      use_sql_comments: true  # SQL ?? ??
      default_batch_fetch_size: 500  # ?? ?? ?? ??
      hibernate:
        format_sql: true  # SQL ???
    open-in-view: false  # Open Session in View ????
    database-platform: org.hibernate.dialect.H2Dialect  # ?????? ???, H2? ??
  datasource:
    driver-class-name: org.h2.Driver  # H2 ????
    url: jdbc:h2:tcp://localhost/~/test  # H2 ?????? URL
    username: sa  # H2 ??? ??
    password:  # H2 ????
  h2:
    console:
      enabled: true  # H2 ?? ???
      path: /h2-console  # H2 ?? ??
logging:
  level:
    org:
      hibernate:
        SQL: debug  # Hibernate SQL ???
        orm:
          jdbc:
            bind: trace  # JDBC ??? ??
      springframework:
        security: debug  # Spring Security ???
